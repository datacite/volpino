---
http_interactions:
- request:
    method: get
    uri: http://search.datacite.org/api?fl=doi,creator,title,publisher,publicationYear,resourceTypeGeneral,description,datacentre,datacentre_symbol,prefix,relatedIdentifier,xml,updated&q=doi:10.5281/ZENODO.21429&rows=1&wt=json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Maremma - http://profiles.local
      Accept:
      - application/json
  response:
    status:
      code: 200
      message: ''
    headers:
      Server:
      - nginx/1.1.19
      Date:
      - Wed, 27 Apr 2016 19:40:14 GMT
      Content-Type:
      - application/json;charset=UTF-8
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Headers:
      - Content-Type,Accept,Accept-Encoding,Origin,User-Agent,Cache-Control,Keep-Alive
    body:
      encoding: UTF-8
      string: '{"responseHeader":{"status":0,"QTime":1},"response":{"numFound":1,"start":0,"docs":[{"datacentre_symbol":"CERN.ZENODO","xml":"PHJlc291cmNlIHhtbG5zPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyIgeG1sbnM6eHNpPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnNjaGVtYUxvY2F0aW9uPSJodHRwOi8vZGF0YWNpdGUub3JnL3NjaGVtYS9rZXJuZWwtMyBodHRwOi8vc2NoZW1hLmRhdGFjaXRlLm9yZy9tZXRhL2tlcm5lbC0zL21ldGFkYXRhLnhzZCI+CiAgPGlkZW50aWZpZXIgaWRlbnRpZmllclR5cGU9IkRPSSI+MTAuNTI4MS96ZW5vZG8uMjE0Mjk8L2lkZW50aWZpZXI+CiAgPGNyZWF0b3JzPgogICAgPGNyZWF0b3I+CiAgICAgIDxjcmVhdG9yTmFtZT5HdWRtdW5kdXIgQS4gVGhvcmlzc29uPC9jcmVhdG9yTmFtZT4KICAgICAgPGFmZmlsaWF0aW9uPk9SQ0lEIEVVPC9hZmZpbGlhdGlvbj4KICAgIDwvY3JlYXRvcj4KICAgIDxjcmVhdG9yPgogICAgICA8Y3JlYXRvck5hbWU+TWFydGluIEZlbm5lcjwvY3JlYXRvck5hbWU+CiAgICAgIDxhZmZpbGlhdGlvbj5PUkNJRCBFVTwvYWZmaWxpYXRpb24+CiAgICA8L2NyZWF0b3I+CiAgPC9jcmVhdG9ycz4KICA8dGl0bGVzPgogICAgPHRpdGxlPm9tbmlhdXRoLW9yY2lkOiB2LjEuMDwvdGl0bGU+CiAgPC90aXRsZXM+CiAgPHB1Ymxpc2hlcj5aZW5vZG88L3B1Ymxpc2hlcj4KICA8cHVibGljYXRpb25ZZWFyPjIwMTU8L3B1YmxpY2F0aW9uWWVhcj4KICA8c3ViamVjdHM+CiAgICA8c3ViamVjdD5vcmNpZDwvc3ViamVjdD4KICAgIDxzdWJqZWN0Pm9hdXRoMjwvc3ViamVjdD4KICAgIDxzdWJqZWN0Pm9tbmlhdXRoPC9zdWJqZWN0PgogICAgPHN1YmplY3Q+cnVieTwvc3ViamVjdD4KICAgIDxzdWJqZWN0PnJhaWxzPC9zdWJqZWN0PgogIDwvc3ViamVjdHM+CiAgPGNvbnRyaWJ1dG9ycz4KICAgIDxjb250cmlidXRvciBjb250cmlidXRvclR5cGU9IkZ1bmRlciI+CiAgICAgIDxjb250cmlidXRvck5hbWU+RXVyb3BlYW4gQ29tbWlzc2lvbjwvY29udHJpYnV0b3JOYW1lPgogICAgICA8bmFtZUlkZW50aWZpZXIgbmFtZUlkZW50aWZpZXJTY2hlbWU9ImluZm8iPmluZm86ZXUtcmVwby9ncmFudEFncmVlbWVudC9FQy9GUDcvMzEyNzg4PC9uYW1lSWRlbnRpZmllcj4KICAgIDwvY29udHJpYnV0b3I+CiAgPC9jb250cmlidXRvcnM+CiAgPGRhdGVzPgogICAgPGRhdGUgZGF0ZVR5cGU9Iklzc3VlZCI+MjAxNS0wNy0yNTwvZGF0ZT4KICA8L2RhdGVzPgogIDxyZXNvdXJjZVR5cGUgcmVzb3VyY2VUeXBlR2VuZXJhbD0iU29mdHdhcmUiLz4KICA8YWx0ZXJuYXRlSWRlbnRpZmllcnM+CiAgICA8YWx0ZXJuYXRlSWRlbnRpZmllciBhbHRlcm5hdGVJZGVudGlmaWVyVHlwZT0iVVJMIj5odHRwOi8vemVub2RvLm9yZy9yZWNvcmQvMjE0Mjk8L2FsdGVybmF0ZUlkZW50aWZpZXI+CiAgPC9hbHRlcm5hdGVJZGVudGlmaWVycz4KICA8cmVsYXRlZElkZW50aWZpZXJzPgogICAgPHJlbGF0ZWRJZGVudGlmaWVyIHJlbGF0aW9uVHlwZT0iSXNTdXBwbGVtZW50VG8iIHJlbGF0ZWRJZGVudGlmaWVyVHlwZT0iVVJMIj5odHRwczovL2dpdGh1Yi5jb20vZGF0YWNpdGUvb21uaWF1dGgtb3JjaWQvdHJlZS92LjEuMDwvcmVsYXRlZElkZW50aWZpZXI+CiAgPC9yZWxhdGVkSWRlbnRpZmllcnM+CiAgPHJpZ2h0c0xpc3Q+CiAgICA8cmlnaHRzIHJpZ2h0c1VSST0iaW5mbzpldS1yZXBvL3NlbWFudGljcy9vcGVuQWNjZXNzIj5PcGVuIEFjY2VzczwvcmlnaHRzPgogICAgPHJpZ2h0cyByaWdodHNVUkk9Imh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwIj5NSVQgbGljZW5zZTwvcmlnaHRzPgogIDwvcmlnaHRzTGlzdD4KICA8ZGVzY3JpcHRpb25zPgogICAgPGRlc2NyaXB0aW9uIGRlc2NyaXB0aW9uVHlwZT0iQWJzdHJhY3QiPiZsdDtwJmd0O29tbmlhdXRoLW9yY2lkIGlzIGEgUnVieSBnZW0gdGhhdCBlbmFibGVzIGF1dGhlbnRpY2F0aW9uIHdpdGggdGhlIE9SQ0lEIHJlZ2lzdHJ5IHZpYSBvYXV0aDIuJmFtcDtuYnNwO29ubWlhdXRoLW9yY2lkIDEuMCB3YXMgcmVsZWFzZWQgb24gSnVseSAyNSwgMjAxNSB3aXRoIHRoZSBmb2xsb3dpbmcgY2hhbmdlczombHQ7L3AmZ3Q7CgombHQ7dWwmZ3Q7CgkmbHQ7bGkmZ3Q7Y2hhbmdlZCBkZWZhdWx0IHNjb3BlIHRvIGF1dGhlbnRpY2F0ZSwgYW5kIHVzZSB0aGUgcHVibGljIEFQSSBodHRwczovL3B1Yi5vcmNpZC5vcmcgYnkgZGVmYXVsdC4gVGhlc2Ugc2V0dGluZ3Mgd29yayBmb3Igbm9uLW1lbWJlcnMuJmx0Oy9saSZndDsKCSZsdDtsaSZndDthZGRlZCBuYW1lIGFuZCBlbWFpbCB0byB0aGUgaW5mbyBoYXNoIHJldHVybmVkIGJ5IG9tbmlhdXRoIChlbWFpbCB3aWxsIGJlIGVtcHR5IGluIGFsbW9zdCBhbGwgY2FzZXMpJmx0Oy9saSZndDsKCSZsdDtsaSZndDtjbGVhbmVkIHVwIGRvY3VtZW50YXRpb24gaW4gUkVBRE1FLm1kJmx0Oy9saSZndDsKJmx0Oy91bCZndDs8L2Rlc2NyaXB0aW9uPgogIDwvZGVzY3JpcHRpb25zPgo8L3Jlc291cmNlPgo=","datacentre":"CERN.ZENODO
        - ZENODO - Research. Shared.","updated":"2015-07-25T16:32:04Z","prefix":"10.5281","doi":"10.5281/ZENODO.21429","publisher":"Zenodo","creator":["Gudmundur
        A. Thorisson","Martin Fenner"],"title":["omniauth-orcid: v.1.0"],"description":["<p>omniauth-orcid
        is a Ruby gem that enables authentication with the ORCID registry via oauth2.&nbsp;onmiauth-orcid
        1.0 was released on July 25, 2015 with the following changes:</p>\n\n<ul>\n\t<li>changed
        default scope to authenticate, and use the public API https://pub.orcid.org
        by default. These settings work for non-members.</li>\n\t<li>added name and
        email to the info hash returned by omniauth (email will be empty in almost
        all cases)</li>\n\t<li>cleaned up documentation in README.md</li>\n</ul>"],"resourceTypeGeneral":"Software","relatedIdentifier":["IsSupplementTo:URL:https://github.com/datacite/omniauth-orcid/tree/v.1.0"],"publicationYear":"2015"}]}}

'
    http_version: 
  recorded_at: Wed, 27 Apr 2016 19:38:11 GMT
- request:
    method: post
    uri: https://api.orcid.org/v1.2/0000-0003-1419-240x/orcid-works
    body:
      encoding: UTF-8
      string: "<?xml version=\"1.0\"?>\n<orcid-message xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"
        xmlns=\"http://www.orcid.org/ns/orcid\" xsi:schemaLocation=\"http://www.orcid.org/ns/orcid
        https://raw.github.com/ORCID/ORCID-Source/master/orcid-model/src/main/resources/orcid-message-1.2.xsd\">\n
        \ <message-version>1.2</message-version>\n  <orcid-profile>\n    <orcid-activities>\n
        \     <orcid-works>\n        <orcid-work>\n          <work-title>\n            <title>omniauth-orcid:
        v.1.0</title>\n          </work-title>\n          <journal-title>Zenodo</journal-title>\n
        \         <short-description>&amp;lt;p&amp;gt;omniauth-orcid is a Ruby gem
        that enables authentication with the ORCID registry via oauth2.&amp;amp;nbsp;onmiauth-orcid
        1.0 was released on July 25, 2015 with the following changes:&amp;lt;/p&amp;gt;\n\n&amp;lt;ul&amp;gt;\n\t&amp;lt;li&amp;gt;changed
        default scope to authenticate, and use the public API https://pub.orcid.org
        by default. These settings work for non-members.&amp;lt;/li&amp;gt;\n\t&amp;lt;li&amp;gt;added
        name and email to the info hash returned by omniauth (email will be empty
        in almost all cases)&amp;lt;/li&amp;gt;\n\t&amp;lt;li&amp;gt;cleaned up documentation
        in README.md&amp;lt;/li&amp;gt;\n&amp;lt;/ul&amp;gt;</short-description>\n
        \         <work-citation>\n            <work-citation-type>bibtex</work-citation-type>\n
        \           <citation>@data{http://doi.org/10.5281/ZENODO.21429, author =
        {Thorisson, Gudmundur A. and Fenner, Martin}, title = {omniauth-orcid: v.1.0},
        publisher = {Zenodo}, doi = {10.5281/ZENODO.21429}, url = {http://doi.org/10.5281/ZENODO.21429},
        year = {2015}}</citation>\n          </work-citation>\n          <work-type>other</work-type>\n
        \         <publication-date>\n            <year>2015</year>\n          </publication-date>\n
        \         <work-external-identifiers>\n            <work-external-identifier>\n
        \             <work-external-identifier-type>doi</work-external-identifier-type>\n
        \             <work-external-identifier-id>10.5281/ZENODO.21429</work-external-identifier-id>\n
        \           </work-external-identifier>\n          </work-external-identifiers>\n
        \         <work-contributors>\n            <contributor>\n              <credit-name>Gudmundur
        A. Thorisson</credit-name>\n            </contributor>\n            <contributor>\n
        \             <credit-name>Martin Fenner</credit-name>\n            </contributor>\n
        \         </work-contributors>\n        </orcid-work>\n      </orcid-works>\n
        \   </orcid-activities>\n  </orcid-profile>\n</orcid-message>\n"
    headers:
      User-Agent:
      - Faraday v0.9.2
      Authorization:
      - Bearer
      Content-Type:
      - application/orcid+xml
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 500
      message: Internal Server Error
    headers:
      Server:
      - nginx/1.4.6 (Ubuntu)
      Date:
      - Wed, 27 Apr 2016 19:38:11 GMT
      Content-Type:
      - text/html;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Content-Language:
      - en
    body:
      encoding: UTF-8
      string: "<!DOCTYPE html><html><head><title>Apache Tomcat/8.0.21 - Error report</title><style
        type=\"text/css\">H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;}
        H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;}
        H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;}
        BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;}
        B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;}
        P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A
        {color : black;}A.name {color : black;}.line {height: 1px; background-color:
        #525D76; border: none;}</style> </head><body><h1>HTTP Status 500 - Attempt
        to retrieve a OrcidOauth2TokenDetail with a null or empty token value</h1><div
        class=\"line\"></div><p><b>type</b> Exception report</p><p><b>message</b>
        <u>Attempt to retrieve a OrcidOauth2TokenDetail with a null or empty token
        value</u></p><p><b>description</b> <u>The server encountered an internal error
        that prevented it from fulfilling this request.</u></p><p><b>exception</b></p><pre>java.lang.IllegalArgumentException:
        Attempt to retrieve a OrcidOauth2TokenDetail with a null or empty token value\n\torg.springframework.util.Assert.hasText(Assert.java:162)\n\torg.orcid.persistence.dao.impl.OrcidOauth2TokenDetailDaoImpl.findNonDisabledByTokenValue(OrcidOauth2TokenDetailDaoImpl.java:56)\n\tsun.reflect.GeneratedMethodAccessor3081.invoke(Unknown
        Source)\n\tsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tjava.lang.reflect.Method.invoke(Method.java:498)\n\torg.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)\n\torg.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)\n\torg.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)\n\torg.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)\n\torg.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\n\torg.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)\n\tcom.sun.proxy.$Proxy491.findNonDisabledByTokenValue(Unknown
        Source)\n\torg.orcid.core.oauth.service.OrcidOauth2TokenDetailServiceImpl.findNonDisabledByTokenValue(OrcidOauth2TokenDetailServiceImpl.java:47)\n\tsun.reflect.GeneratedMethodAccessor3080.invoke(Unknown
        Source)\n\tsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tjava.lang.reflect.Method.invoke(Method.java:498)\n\torg.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)\n\torg.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:201)\n\tcom.sun.proxy.$Proxy525.findNonDisabledByTokenValue(Unknown
        Source)\n\torg.orcid.core.oauth.service.OrcidTokenStoreServiceImpl.readAccessToken(OrcidTokenStoreServiceImpl.java:124)\n\tsun.reflect.GeneratedMethodAccessor3894.invoke(Unknown
        Source)\n\tsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tjava.lang.reflect.Method.invoke(Method.java:498)\n\torg.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)\n\torg.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:201)\n\tcom.sun.proxy.$Proxy542.readAccessToken(Unknown
        Source)\n\torg.orcid.core.oauth.service.OrcidRandomValueTokenServicesImpl.loadAuthentication(OrcidRandomValueTokenServicesImpl.java:183)\n\tsun.reflect.GeneratedMethodAccessor3893.invoke(Unknown
        Source)\n\tsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tjava.lang.reflect.Method.invoke(Method.java:498)\n\torg.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)\n\torg.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)\n\torg.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)\n\torg.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)\n\torg.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)\n\torg.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)\n\torg.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\n\torg.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)\n\tcom.sun.proxy.$Proxy543.loadAuthentication(Unknown
        Source)\n\torg.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationManager.authenticate(OAuth2AuthenticationManager.java:80)\n\torg.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:117)\n\torg.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\n\torg.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter.doFilter(AbstractPreAuthenticatedProcessingFilter.java:94)\n\torg.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\n\torg.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:50)\n\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n\torg.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\n\torg.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)\n\torg.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\n\torg.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)\n\torg.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)\n\torg.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:344)\n\torg.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:261)\n\torg.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)\n\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n\torg.orcid.core.web.filters.CorsFilter.doFilterInternal(CorsFilter.java:49)\n\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n\torg.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:344)\n\torg.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:261)\n\torg.orcid.core.web.filters.ApiVersionFilter.doFilterInternal(ApiVersionFilter.java:52)\n\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n\torg.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:344)\n\torg.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:261)\n\torg.orcid.core.web.filters.JsonpCallbackFilter.doFilterInternal(JsonpCallbackFilter.java:70)\n\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n\torg.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:344)\n\torg.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:261)\n\torg.orcid.core.web.filters.AcceptFilter.doFilterInternal(AcceptFilter.java:60)\n\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n\torg.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:344)\n\torg.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:261)\n</pre><p><b>note</b>
        <u>The full stack trace of the root cause is available in the Apache Tomcat/8.0.21
        logs.</u></p><hr class=\"line\"><h3>Apache Tomcat/8.0.21</h3></body></html>"
    http_version: 
  recorded_at: Wed, 27 Apr 2016 19:38:11 GMT
recorded_with: VCR 2.9.3
