name: CI
on:
  workflow_call:
    secrets:
        SECRET_KEY_BASE:
          required: true
        SESSION_ENCRYPTED_COOKIE_SALT:
          required: true
        JWT_PRIVATE_KEY:
          required: true
        JWT_PUBLIC_KEY:
          required: true
        ORCID_CLIENT_ID_FOR_TESTING:
          required: true
        ORCID_TOKEN_FOR_TESTING:
          required: true
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      memcached:
        image: memcached:1.4.31
        ports:
          - 11211
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: datacite
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        ports:
          - 3306
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
        env:
          discovery.type: single-node
          ES_JAVA_OPTS: -Xms512m -Xmx512m
          ELASTIC_PASSWORD: changeme
          xpack.security.enabled: "false"
          http.cors.enabled: "true"
          http.cors.allow-origin: "*"
        ports:
          - 9200
      redis:
        image: redis
        ports:
          - 6379
    env:
      MEMCACHE_SERVERS: "localhost:11211"
      MYSQL_HOST: "127.0.0.1"
      MYSQL_DATABASE: datacite
      MYSQL_USER: root
      ES_HOST: "localhost:9200"
      ELASTIC_PASSWORD: "changeme"
      SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
      SESSION_ENCRYPTED_COOKIE_SALT: ${{ secrets.SESSION_ENCRYPTED_COOKIE_SALT }}
      JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
      JWT_PUBLIC_KEY: ${{ secrets.JWT_PUBLIC_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby 3.1.4
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.4
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          cp .env.build .env
          gem install bundler -v 2.4.22 
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          # sudo /etc/init.d/mysql start
          bundle exec rails db:setup RAILS_ENV=test
      - name: Lint and Test
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
          ES_HOST: localhost:${{ job.services.elasticsearch.ports[9200] }}
          ELASTIC_PASSWORD: "changeme"
          MEMCACHE_SERVERS: localhost:${{ job.services.memcached.ports[11211] }}
          REDIS_URL: redis://localhost:${{ job.services.redis.ports[6379] }}
          ORCID_CLIENT_ID: ${{ secrets.ORCID_CLIENT_ID_FOR_TESTING }}
          ORCID_TOKEN: ${{ secrets.ORCID_TOKEN_FOR_TESTING }}
        run: |
          bundle exec rubocop
          bundle exec rspec
          echo $?